// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProLivros.Persistence;

#nullable disable

namespace ProLivros.Persistence.Migrations
{
    [DbContext(typeof(ProLivrosContext))]
    partial class ProLivrosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ProLivros.Domain.Assunto", b =>
                {
                    b.Property<int>("CodAs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAs"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("CodAs");

                    b.ToTable("Assunto", (string)null);
                });

            modelBuilder.Entity("ProLivros.Domain.Autor", b =>
                {
                    b.Property<int>("CodAu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CodAu"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("CodAu");

                    b.ToTable("Autor", (string)null);
                });

            modelBuilder.Entity("ProLivros.Domain.Livro", b =>
                {
                    b.Property<int>("Codl")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codl"), 1L, 1);

                    b.Property<string>("AnoPublicacao")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Capa")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Edicao")
                        .HasColumnType("int");

                    b.Property<string>("Editora")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Codl");

                    b.ToTable("Livro", (string)null);
                });

            modelBuilder.Entity("ProLivros.Domain.LivroAssunto", b =>
                {
                    b.Property<int>("Assunto_CodAs")
                        .HasColumnType("int");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("int");

                    b.HasIndex(new[] { "Assunto_CodAs" }, "IX_Livro_Assunto_Assunto_CoAs");

                    b.HasIndex(new[] { "Livro_Codl" }, "IX_Livro_Assunto_Livro_Codl");

                    b.ToTable("Livro_Assunto", (string)null);
                });

            modelBuilder.Entity("ProLivros.Domain.LivroAutor", b =>
                {
                    b.Property<int>("Autor_CodAu")
                        .HasColumnType("int");

                    b.Property<int>("Livro_Codl")
                        .HasColumnType("int");

                    b.HasIndex("Autor_CodAu");

                    b.HasIndex("Livro_Codl");

                    b.ToTable("Livro_Autor", (string)null);
                });

            modelBuilder.Entity("ProLivros.Domain.LivroAssunto", b =>
                {
                    b.HasOne("ProLivros.Domain.Assunto", "Assunto")
                        .WithMany()
                        .HasForeignKey("Assunto_CodAs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProLivros.Domain.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("ProLivros.Domain.LivroAutor", b =>
                {
                    b.HasOne("ProLivros.Domain.Assunto", "Autor")
                        .WithMany()
                        .HasForeignKey("Autor_CodAu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProLivros.Domain.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("Livro_Codl")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Livro");
                });
#pragma warning restore 612, 618
        }
    }
}
